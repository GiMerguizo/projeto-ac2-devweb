{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nexport let UsersComponent = class UsersComponent {\n  constructor(router) {\n    this.router = router;\n    this.taskList = [];\n    this.taskList = [{\n      done: false,\n      description: \"Clean the house\"\n    }, {\n      done: false,\n      description: \"Wash the car\"\n    }, {\n      done: true,\n      description: \"Feed the dog\"\n    }];\n    this.signupForm = new FormGroup({\n      name: new FormControl('', Validators.required),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(20)]),\n      passwordConfirmation: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(20)])\n    });\n  }\n  changeTask(task) {\n    task.done = !task.done;\n  }\n  onSubmit() {\n    console.log(\"New user added with success!\");\n    console.log(this.signupForm.value);\n    this.router.navigate([\"/app/add-user\"]);\n  }\n  onEdit() {\n    this.router.navigate([\"/app/edit-user\"]);\n  }\n  onDelete() {\n    console.log(\"Excluindo usuário.\");\n  }\n};\nUsersComponent = __decorate([Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})], UsersComponent);","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","UsersComponent","constructor","router","taskList","done","description","signupForm","name","required","email","password","minLength","maxLength","passwordConfirmation","changeTask","task","onSubmit","console","log","value","navigate","onEdit","onDelete","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Master\\Documents\\GitHub\\projeto-ac2-devweb\\crud-app\\src\\app\\pages\\home\\components\\users\\users.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\ninterface Task {\r\n  done: boolean;\r\n  description: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.css']\r\n})\r\nexport class UsersComponent {\r\n  taskList: Task[] = []\r\n  signupForm: FormGroup;\r\n\r\n  constructor(private router: Router) {\r\n    this.taskList = [\r\n      {done: false, description: \"Clean the house\"},\r\n      {done: false, description: \"Wash the car\"},\r\n      {done: true, description: \"Feed the dog\"},\r\n    ]\r\n\r\n    this.signupForm = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      password: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(20)]),\r\n      passwordConfirmation: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(20)])\r\n    });\r\n  }\r\n\r\n  changeTask(task: Task) {\r\n    task.done = !task.done\r\n  } \r\n\r\n  onSubmit() {\r\n    console.log(\"New user added with success!\")\r\n    console.log(this.signupForm.value);\r\n\r\n    this.router.navigate([\"/app/add-user\"])\r\n  }\r\n\r\n  onEdit() {\r\n    this.router.navigate([\"/app/edit-user\"])\r\n  }\r\n\r\n  onDelete() {\r\n    console.log(\"Excluindo usuário.\")\r\n  }\r\n\r\n}\r\n\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAc5D,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAIzBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAH1B,KAAAC,QAAQ,GAAW,EAAE;IAInB,IAAI,CAACA,QAAQ,GAAG,CACd;MAACC,IAAI,EAAE,KAAK;MAAEC,WAAW,EAAE;IAAiB,CAAC,EAC7C;MAACD,IAAI,EAAE,KAAK;MAAEC,WAAW,EAAE;IAAc,CAAC,EAC1C;MAACD,IAAI,EAAE,IAAI;MAAEC,WAAW,EAAE;IAAc,CAAC,CAC1C;IAED,IAAI,CAACC,UAAU,GAAG,IAAIR,SAAS,CAAC;MAC9BS,IAAI,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACS,QAAQ,CAAC;MAC9CC,KAAK,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACU,KAAK,CAAC,CAAC;MACnEC,QAAQ,EAAE,IAAIb,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACY,SAAS,CAAC,CAAC,CAAC,EAAEZ,UAAU,CAACa,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MACvGC,oBAAoB,EAAE,IAAIhB,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACY,SAAS,CAAC,CAAC,CAAC,EAAEZ,UAAU,CAACa,SAAS,CAAC,EAAE,CAAC,CAAC;KACnH,CAAC;EACJ;EAEAE,UAAUA,CAACC,IAAU;IACnBA,IAAI,CAACX,IAAI,GAAG,CAACW,IAAI,CAACX,IAAI;EACxB;EAEAY,QAAQA,CAAA;IACNC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC3CD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,UAAU,CAACa,KAAK,CAAC;IAElC,IAAI,CAACjB,MAAM,CAACkB,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;EACzC;EAEAC,MAAMA,CAAA;IACJ,IAAI,CAACnB,MAAM,CAACkB,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC;EAC1C;EAEAE,QAAQA,CAAA;IACNL,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACnC;CAED;AAtCYlB,cAAc,GAAAuB,UAAA,EAL1B3B,SAAS,CAAC;EACT4B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACW1B,cAAc,CAsC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}